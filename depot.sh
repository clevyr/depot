#! /bin/bash

### DO NOT EDIT THIS FILE

source ./conf.sh

set -e

NOW=`date "+%m-%d-%Y_%H-%M-%S"`
CURRENT_PATH=`dirname $0`

# Create temp backup directory
mkdir -p /tmp/db_backups/${NOW}

### UPDATE LOGIC FOR THIS COMMAND IN ./conf.sh

# Pass in backup directory to function
custom_backup_cmds /tmp/db_backups/${NOW}

### END UPDATE

# Tar everything in the new backup folder
tar -C /tmp/db_backups -zcvf ./backups/${NOW}.tar.gz ${NOW}

# Delete temp backup directory
rm -r /tmp/db_backups/${NOW}

# Delete backups older than 7 days
find ${CURRENT_PATH}/backups/. -mtime +7 -name "*.sql" -exec bash -c 'rm "$0"' {} \;

# Get list of all backup files
TOTAL_BACKUPS=`find ${CURRENT_PATH}/backups/. -name "*.tar.gz" | wc -l`

# Sync the backups to AWS - only if there are backups in the dir
# If there are no backups, that's a sign of a problem, so we don't want to sync
if [ "$TOTAL_BACKUPS" -ne "0" ]; then
  eval "${AWS_PATH} s3 sync ${CURRENT_PATH}/backups/. s3://${S3_BUCKET}/ --delete --sse"
fi
